// This file was generated by lezer-generator. You probably shouldn't edit it.
import {LRParser} from "@lezer/lr"
export const parser = LRParser.deserialize({
  version: 14,
  states: "#xOVQPOOO[QPOOOgQPO'#C_O[QPO'#CaQ!RQPOOO!aQPO'#CiOOQO'#Cp'#CpO!fQPO,58{O[QPO,59OO[QPO,59OO[QPO'#CkOOQO,59T,59TOOQO1G.g1G.gOOQO1G.j1G.jO!wQPO1G.jO#`QPO,59VO[QPO'#ClO#tQPO1G.qOOQO1G.q1G.qO#|QPO,59WOOQO-E6j-E6jOOQO7+$]7+$]",
  stateData: "$b~OcOS~OQPO~OSUOUROeQO~OU^XXRXYRXZRX[RXaRXVRXfRX~OXWOYWOZXO[XO~OUYO~OV[OXWOYWOZXO[XO~OXWOYWOZWi[WiaWiVWifWi~OVbOXWOYWOZXO[XOf`O~OVeOf`O~OXWOYWOZXO[XOV`af`a~O",
  goto: "!cePPPfPfPPfPPPPfnvyPPP!P]UPRWXY`]TPRWXY`RZTQa_RdaQSPQVRQ]WQ^XQ_YRc`",
  nodeNames: "âš  ColumnDefinitionExpression Equal Column Number ParenthesizedExpression OpenBrace CloseBrace BinaryExpression Divide Times Plus Minus CallExpression Function ArgList",
  maxTerm: 22,
  skippedNodes: [0],
  repeatNodeCount: 1,
  tokenData: "$_~RaXY!WYZ!W]^!Wpq!Wxy!iyz!nz{!s{|!x|}!}}!O#S!O!P#X!P!Q#g!Q![#l!_!`#w!c!}#|#R#S#|#T#o#|~!]Sc~XY!WYZ!W]^!Wpq!W~!nOU~~!sOV~~!xOY~~!}OZ~~#SOf~~#XO[~~#[P!Q![#_~#dPS~!Q![#_~#lOX~~#qQS~!O!P#_!Q![#l~#|OQ~~$RSe~!Q![#|!c!}#|#R#S#|#T#o#|",
  tokenizers: [0],
  topRules: {"ColumnDefinitionExpression":[0,1]},
  tokenPrec: 0
})
